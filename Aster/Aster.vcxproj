<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{f7051b8d-736f-497a-9838-f1fa76dcf3b6}</ProjectGuid>
    <RootNamespace>Aster</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <ProjectName>Aster</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <EnableUnitySupport>true</EnableUnitySupport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <EnableUnitySupport>true</EnableUnitySupport>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
  <PropertyGroup Label="Vcpkg" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
  <PropertyGroup Label="Vcpkg" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
  <PropertyGroup Label="Vcpkg" Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(VCPKG_ROOT)\installed\$(VcpkgUserTriplet)\include\Common;$(ProjectDir)\thirdparty;$(ProjectDir);$(VULKAN_SDK)\Include;</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <ExceptionHandling>false</ExceptionHandling>
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <FunctionLevelLinking>false</FunctionLevelLinking>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)/Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <FxCompile />
    <FxCompile>
      <ShaderModel>6.3</ShaderModel>
      <AdditionalOptions>-spirv %(AdditionalOptions)</AdditionalOptions>
      <ObjectFileOutput>$(OutDir)%(RelativeDir)%(Filename).spv</ObjectFileOutput>
    </FxCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(VCPKG_ROOT)\installed\$(VcpkgUserTriplet)\include\Common;$(ProjectDir)\thirdparty;$(ProjectDir);$(VULKAN_SDK)\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <ExceptionHandling>false</ExceptionHandling>
      <WarningLevel>Level4</WarningLevel>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)/Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <FxCompile />
    <FxCompile>
      <ShaderModel>6.3</ShaderModel>
      <AdditionalOptions>-spirv %(AdditionalOptions)</AdditionalOptions>
      <ObjectFileOutput>$(OutDir)%(RelativeDir)%(Filename).spv</ObjectFileOutput>
    </FxCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(VCPKG_ROOT)\installed\$(VcpkgUserTriplet)\include\Common;$(ProjectDir)\thirdparty;$(ProjectDir);$(VULKAN_SDK)\Include;</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <ExceptionHandling>Sync</ExceptionHandling>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)/Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <FxCompile>
      <ObjectFileOutput>$(OutDir)%(RelativeDir)%(Filename).spv</ObjectFileOutput>
      <ShaderModel>6.3</ShaderModel>
      <AdditionalOptions>-spirv %(AdditionalOptions)</AdditionalOptions>
    </FxCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <FunctionLevelLinking>false</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(VCPKG_ROOT)\installed\$(VcpkgUserTriplet)\include\Common;$(ProjectDir)\thirdparty;$(ProjectDir);$(VULKAN_SDK)\Include;</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <WarningLevel>Level4</WarningLevel>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)/Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <FxCompile>
      <ObjectFileOutput>$(OutDir)%(RelativeDir)%(Filename).spv</ObjectFileOutput>
      <ShaderModel>6.3</ShaderModel>
      <AdditionalOptions>-spirv %(AdditionalOptions)</AdditionalOptions>
    </FxCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="core\buffer.cpp" />
    <ClCompile Include="core\gui.cc" />
    <ClCompile Include="core\pipeline.cc" />
    <ClCompile Include="core\renderpass.cc" />
    <ClCompile Include="global.cc" />
    <ClCompile Include="logger.cc" />
    <ClCompile Include="core\context.cc" />
    <ClCompile Include="core\device.cc" />
    <ClCompile Include="core\swapchain.cc" />
    <ClCompile Include="core\window.cc" />
    <ClCompile Include="thirdparty\imgui\imgui.cpp" />
    <ClCompile Include="thirdparty\imgui\imgui_demo.cpp" />
    <ClCompile Include="thirdparty\imgui\imgui_draw.cpp" />
    <ClCompile Include="thirdparty\imgui\imgui_impl_glfw.cpp" />
    <ClCompile Include="thirdparty\imgui\imgui_impl_vulkan.cpp" />
    <ClCompile Include="thirdparty\imgui\imgui_widgets.cpp" />
    <ClCompile Include="thirdparty\optick\optick_capi.cpp" />
    <ClCompile Include="thirdparty\optick\optick_core.cpp" />
    <ClCompile Include="thirdparty\optick\optick_gpu.cpp" />
    <ClCompile Include="thirdparty\optick\optick_gpu.d3d12.cpp" />
    <ClCompile Include="thirdparty\optick\optick_gpu.vulkan.cpp" />
    <ClCompile Include="thirdparty\optick\optick_message.cpp" />
    <ClCompile Include="thirdparty\optick\optick_miniz.cpp" />
    <ClCompile Include="thirdparty\optick\optick_serialization.cpp" />
    <ClCompile Include="thirdparty\optick\optick_server.cpp" />
    <ClCompile Include="thirdparty\renderdoc\renderdoc.cpp" />
    <ClCompile Include="thirdparty\spirv_reflect\spirv_reflect.c" />
    <ClCompile Include="util\buffer_writer.cpp" />
    <ClCompile Include="util\files.cc" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="config.h" />
    <ClInclude Include="constants.h" />
    <ClInclude Include="core\buffer.h" />
    <ClInclude Include="core\camera.h" />
    <ClInclude Include="core\gui.h" />
    <ClInclude Include="core\pipeline.h" />
    <ClInclude Include="core\renderpass.h" />
    <ClInclude Include="global.h" />
    <ClInclude Include="core\context.h" />
    <ClInclude Include="logger.h" />
    <ClInclude Include="core\device.h" />
    <ClInclude Include="core\glfw_context.h" />
    <ClInclude Include="core\swapchain.h" />
    <ClInclude Include="core\window.h" />
    <ClInclude Include="ownership.h" />
    <ClInclude Include="thirdparty\imgui\imconfig.h" />
    <ClInclude Include="thirdparty\imgui\imgui.h" />
    <ClInclude Include="thirdparty\imgui\imgui_impl_glfw.h" />
    <ClInclude Include="thirdparty\imgui\imgui_impl_vulkan.h" />
    <ClInclude Include="thirdparty\imgui\imgui_internal.h" />
    <ClInclude Include="thirdparty\imgui\imstb_rectpack.h" />
    <ClInclude Include="thirdparty\imgui\imstb_textedit.h" />
    <ClInclude Include="thirdparty\imgui\imstb_truetype.h" />
    <ClInclude Include="thirdparty\optick\optick.config.h" />
    <ClInclude Include="thirdparty\optick\optick.h" />
    <ClInclude Include="thirdparty\optick\optick_capi.h" />
    <ClInclude Include="thirdparty\optick\optick_common.h" />
    <ClInclude Include="thirdparty\optick\optick_core.freebsd.h" />
    <ClInclude Include="thirdparty\optick\optick_core.h" />
    <ClInclude Include="thirdparty\optick\optick_core.linux.h" />
    <ClInclude Include="thirdparty\optick\optick_core.macos.h" />
    <ClInclude Include="thirdparty\optick\optick_core.platform.h" />
    <ClInclude Include="thirdparty\optick\optick_core.win.h" />
    <ClInclude Include="thirdparty\optick\optick_gpu.h" />
    <ClInclude Include="thirdparty\optick\optick_memory.h" />
    <ClInclude Include="thirdparty\optick\optick_message.h" />
    <ClInclude Include="thirdparty\optick\optick_miniz.h" />
    <ClInclude Include="thirdparty\optick\optick_serialization.h" />
    <ClInclude Include="thirdparty\optick\optick_server.h" />
    <ClInclude Include="thirdparty\renderdoc\renderdoc.h" />
    <ClInclude Include="thirdparty\renderdoc\renderdoc_api.h" />
    <ClInclude Include="thirdparty\spirv_reflect\spirv_reflect.h" />
    <ClInclude Include="util\buffer_writer.h" />
    <ClInclude Include="util\files.h" />
    <ClInclude Include="thirdparty\vma\vk_mem_alloc.h" />
    <ClInclude Include="thirdparty\vma\vk_mem_alloc.hpp" />
  </ItemGroup>
  <ItemGroup>
    <FxCompile Include="res\shaders\shader.fs.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Pixel</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Pixel</ShaderType>
      <ObjectFileOutput Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(OutDir)%(RelativeDir)%(Filename).spv</ObjectFileOutput>
      <ObjectFileOutput Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(OutDir)%(RelativeDir)%(Filename).spv</ObjectFileOutput>
      <ObjectFileOutput Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(OutDir)%(RelativeDir)%(Filename).spv</ObjectFileOutput>
      <ObjectFileOutput Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(OutDir)%(RelativeDir)%(Filename).spv</ObjectFileOutput>
    </FxCompile>
    <FxCompile Include="res\shaders\shader.vs.hlsl">
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Vertex</ShaderType>
      <ShaderType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Vertex</ShaderType>
    </FxCompile>
  </ItemGroup>
  <ItemGroup>
    <None Include="res\shaders\shader.hlsli" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
  <PropertyGroup Condition="'$(Language)'=='C++'">
    <CAExcludePath>"$(ProjectDir)\vma\";$(CAExcludePath)</CAExcludePath>
  </PropertyGroup>
</Project>